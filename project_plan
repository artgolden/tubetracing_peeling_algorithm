Input data: half of the embryo imaged with 2 merged illuminations, assuming that there are exacly only half of embryo in the volume. Such that the center axis of the embryo lays on the last plane. Will need to expand this later!
+ max projection -> 
  median filter -> 
  thresholding and detection of embryo ->
  outscribe an ellipse ->
  get coords of ellipse foci
+ downsample raw volume ->
  crop only region around the embryo (at first pass skip this, assume cropped volume as input) (save cropped volume in cartesian coords) ->
  transform volume to cylindrical coords such that line between ellipse foci is the axis of the cylinder 
+ perform raytracing (simple one for now) with finding the signal intensity rise when going from out in along the ray. Take only the region of the ray that makes biological sense (later). At first just do all rays going perpendicular from cylinder axis, later do rays spreading on halfspheres from the ellipse foci. ->
  coords of signal rise along the ray -> 
  discard outliers (that detect surface significantly away along the ray than their neighbours) (later) ->
  convert back to cortesian coords
+ Point cloud to mesh ->
  upscale (from previous image downscaling) mesh (later) ->
  smooth mesh ->
  smooth mesh shape with alpha-folds (later) optional?
+ convert mesh to 3D mask ->
  erode mask by several layers ->
  delete mask from downsampled (full res later) cropped transformed volume -> save 3D tiff and max proj of peeled.
  convert mesh coords back to orignal raw image (later)
+ Do simple cylindrical max projection from 3D peeled volume


Ongoing problems and questions:
x A lot of erroneours detections inside the embryo. But convex hull gives prety good estimate nonetheless.
+ Try 3d median filter for better detection? does not work
x Or some other form of 3d denoising?
x there are lots of detections around the origin of the polar coords, why is that? = Looks like it was because of the rays pointing away from the image volume, limiting Phi to 0:Pi/2 solved it.
+ Add cylindrical_cartography_projection to main script


Current TODO:
+ Add embryo projection outline as a countour of points at Z=max for the convexHull to be extending to volume border.
+ Integrate convexHull, binarization and substraction from the image using vedo library into main code
+ Export binarized substraction mask as a file and the substraction volume center point such that later it can be used for the plugin of manual surface substraction correction.
+ Add raw_images -> merged_images, creating MIP and threshold mask, downsampling to the main script
+ Add upsampling the substraction volume mask to the original resolution and outputing full res substracted volume and cartography
+ Add logic to do it for a time series, where the shape of the crop region is fixed by the first timepoint, that should ensure same size for cartography projections
+ Make sure that substraction mask, substracted volume and cartography projection are saved in the outputs folder
+ Make the script operate on a folder with several groups of time series. same as for drift correction script.
  - Expose most parameters as cli arguments, including image file name mask for general use by other people
+ Add proper logging, printing of finished operations per image and progress bar
- check documentation for functions
+ add several rounds of erosion and dilation after creating embryo mask to remove dirt
- Fix upscaled volume mask does not extend to max Z
- Remove unnecessary imports when activating BestBackend
+ Periodically, especially within loops or after large operations, explicitly free all blocks in CuPy's memory pool. This reduces memory fragmentation and should remove out-of-memory (OOM) errors.
- Add potential chunking of xi arrays when doing interpolation and gpu memory cleanup after each.
- Add timestapmt to saved source code file
+ !!! Change thresholding for structure detection with wbns to "mean", save images from wbns for debugging to disk, add failsafe for the number of points detected, add more info to logging about image parameters and number of points detected
+ Add argument to skip a series containing pattern in the TIF file name
- !! cartography projection can sometimes introduce stretching of the projection in vertical direction for one timepoint. Need to fix.
  - Embryo is drifting up and down in the z direction, and this corresponds to projection being slightly stretched and squeezed. Need to do some drift correction maybe on YZ slices to correct this drift. 
+ Need to implement dirt detection filtering by checking each point and radius 4 around it, if removing all points in this radius makes the convex hull significantly smaller/change shape, then remove the point. Or if all other close points are much closer to embryo center that that point. Convex hull is sequential and expensive algorithm, so it would not work to recalculate it many many times.
- On top of the embryo surface, since 2 illumination stiching is done using averaging, there ends up blurry halo, especially on tangential slices that gets recognised by WBNS surface detection and leads to errors in the mask. Possible fix is do the illumination stitching using linear blending instead of averaging.
- Change the crop rotated rectangle 3d code to ndimage affine_transform with default option of interpolation order=4 to minimize artifacts. Expoose interpolation order as cli argument.
- Add an option to have 3 separate layers peeled with different thicknesses each


For later:
- Add finding the z of embry central axis by fitting a circle to X projection
- Find parameter value for alpha shapes that are good for bean shaped embryos instead of convexHull
- Write a Napari plugin that allows to manually correct the substraction mask by clicking on the cartography projection, and thus adding or sustracting from the surface of the substraction mask volume at a correspoinding location. It will probably be convenient to have substraction mask be in cylindrical coordinates same as the cartography projection.
- Check whether transposes from ZYX to XYZ are necessary for the vedo library.
- When cropping right to the embryo, just assuming embryo is a circle when doing cylindrical projection is not good enough. Need better estimation of the embryo size and r_max.
- Find out whether running get_isotropic_volume on GPU introduces some voxel errors from GPU specific interpolation and floating point conversions.
